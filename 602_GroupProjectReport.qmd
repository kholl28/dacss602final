---
title: "YOUR PROJECT TITLE"
subtitle: "602 (Fall 2023)"
author: Kenneth Bufford, Kai Holl, Esiquio Iglesias Guerra
format: 
  html:
    toc: true
    toc-depth: 2
    toc-title: Contents
    toc-location: left
    html-math-method: katex
    theme: flatly
    smooth-scroll: true
    link-external-icon: true
    link-external-newwindow: true
    citations-hover: true
    footnotes-hover: true
    font-size: 80%
---

<!--
ATTENTION: PLEASE SUBMIT both your qmd file and html file.
-->


<!--
Replace the placeholders (title and author) with yours in the yaml above.
-->


# Project Description
<!--
State your research question and hypothesis along with the description of your experiment in one paragraph.
-->


```{r}
#| label: setup
#| warning: false
#| message: false

# library(ggpubr)
# library(naniar)
library(tidyr)
library(haven)
library(tidyverse)
library(explore)
library(haven) #for loading other datafiles (SAS, STATA, SPSS, etc.)
library(stringr)
library(ggpubr)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```


```{r warning = FALSE, message = FALSE}
survey.data <- read_csv("/Users/kaiholl/Documents/GitHub/dacss602final/survey_data_v2.csv")

# renaming columns to make referencing them easier
# --------------------------------
oldnames = c("...1","(att)g4q1_1_honest living","(att)g4q1_2_next door","(att)g4q1_3_rehabilitate","(att)g4q1_4_productivelives","(att)g4q1_5_immoral","(att)g4q1_6_circumstance","(att)g4q1_7_trust","(att)g4q1_8_guard","(att)g4q1_9_parole","(control)g4q2_felonsvote","g4q3_white_lowc_noitd","g4q4_nowhite_lowc_noitd","g4q5_white_medc_noitd","g4q6_nowhite_medc_noitd","g4q7_white_highc_noitd","g4q8_nowhite_highc_noitd","g4q9_white_lowc_itd","g4q10_nowhite_lowc_itd","g4q11_white_medc_itd","g4q12_nowhite_medc_itd","g4q13_white_highc_itd","g4q14_nowhite_highc_itd","g4jail1_youincar","g4jail2_famfrdincar")

newnames = c("respondent","honest.living","next.door","rehab","productive","immoral","circumstance","trust","guard","parole","vote.info","white.low.nor","non.low.nor","white.med.nor","non.med.nor","white.high.nor","non.high.nor","white.low.r","non.low.r","white.med.r","non.med.r","white.high.r","non.high.r","you.jail","famfrd.jail")

# Info on Column Names
# --------------------------------
# ATTITUDES SCALE - full Questions
# honest.living = Most felons are too lazy to earn an honest living. **(REVERSE SCORED)**
# next.door = I wouldn’t mind living next door to an ex-felon.
# rehab = Trying to rehabilitate felons is a waste of time and money. **(REVERSE SCORED)**
# productive = Given the right conditions, felons can lead productive lives and become law-abiding citizens.
# immoral = Felons are just plain immoral. **(REVERSE SCORED)**
# circumstance = Felons are victims of circumstance and deserve to be helped.
# trust = It is wise to trust a felon.
# guard = You have to be constantly on your guard with felons. **(REVERSE SCORED)**
# parole = If a person does well in prison, he/she should be let out on parole.

# VIGNETTES
# white = white felon
# non = non-white felon
# low = low crime severity, tax fraud
# med = medium crime severity, armed robbery
# high = high crime severity, sexual offense against a child
# nor = no intention to recidivate, ie. do not intend to recommit crimes once out of prison
# r = intention to recidiviate, ie. do intend to recommit crimes once out of prison


# Recoding Attitude Responses to Numeric
# --------------------------------
survey.data <- survey.data %>%
  select(-c(DistributionChannel, Consent)) %>% # removing some unnecessary columns
  rename_at(vars(oldnames), ~ newnames) %>%  
  mutate(across(c("next.door","productive","circumstance","trust","parole","vote.info"), # normal worded positive scale items plus vote.info variable
            ~case_when(
              grepl("Strongly disagree", .) ~ 1,
              grepl("Disagree", .) ~ 2,
              grepl("Agree", .) ~ 3,
              grepl("Strongly agree", .) ~ 4))) %>%
    mutate(across(c("honest.living","rehab","immoral","guard"), # recoding reverse worded survey items
            ~case_when(
              grepl("Strongly disagree", .) ~ 4,
              grepl("Disagree", .) ~ 3,
              grepl("Agree", .) ~ 2,
              grepl("Strongly agree", .) ~ 1)))

# Tabulating a Total Attitudes Score for Each Respondent
# --------------------------------
survey.data <- survey.data %>%
  mutate(attitudes = rowSums(.[3:11]) - 9, .after = "parole")

# 0 = most negative attitudes towards felons possible
# 27 = most positive attitudes towards felons possible

# Creating Summary df
# --------------------------------
vignettes <- survey.data %>%
  select(14:25) 

respondent.df <- survey.data %>%
  mutate(v.condition = names(vignettes)[max.col(!is.na(vignettes))], .after = "non.high.r") %>% 
  mutate(felon.race = case_when(
    str_detect(v.condition, "white") ~ "white",
    str_detect(v.condition, "non") ~ "non-white"), .after = "v.condition") %>% 
  mutate(crime.sev = case_when(
    str_detect(v.condition, "low") ~ "low",
    str_detect(v.condition, "med") ~ "medium",
    str_detect(v.condition, "high") ~ "high"), .after = "felon.race") %>%
   mutate(recidivism = case_when(
    str_detect(v.condition, "nor") ~ "no intent",
    str_detect(v.condition, "r") ~ "intent"), .after = "crime.sev") %>% 
  mutate(v.response = coalesce(white.low.nor,non.low.nor,white.med.nor,non.med.nor,white.high.nor,non.high.nor, # v.response = survey participant's response to vignette
                               white.low.r,non.low.r,white.med.r,non.med.r,white.high.r,non.high.r), .after = "recidivism") %>% 
  select(-14:-25, -v.condition)
```




# Descriptive Summary
<!--
One descriptive table and/or plot: Provide an overview of all the variables used in the statistical test. For example, the mean, standard deviation, range (min/max), contingency table, etc.
-->

```{r}
# turning variables into factor variable
# --------------------------------
respondent.df$crime.sev <- factor(respondent.df$crime.sev, levels = c("low", "medium", "high"))
respondent.df$v.response <- as.factor(respondent.df$v.response)




# example
library(psych) # Use any package you'd like to use!
names(iris) # names(DATAFRAME)
describe(iris) # describe(DATAFRAME)
```



# Findings
<!--
Findings: Report the statistic you obtained along with the information to decide whether the null hypothesis can be rejected or not. Use a plot and/or table with a proper label.
-->

```{r}
# What variables do we want to compare to each other to see if there is a relationship?

# Attitudes vs. Vignette Response
# Attitudes vs. Information Influence
# Race of felon vs. Vignette Response = chi-squared test
# Crime Severity vs. Vignette Response = chi-squared test
# Recidivism Intention vs. Vignette Response = chi-squared test


# Attitudes vs. Vignette Response
# --------------------------------
# respondent.df %>% 
# cor.test(attitudes, )

# att.v <- lm(attitudes ~ v.response, respondent.df)
# summary(att.v)

respondent.df <- respondent.df %>% 
  mutate(v.response = case_when(
              v.response == "No" ~ "0",
              v.response == "Yes" ~ "1"))

# cor.test(respondent.df$v.response, respondent.df$attitudes, method = c("spearman"))


# Attitudes vs. Information Influence
# --------------------------------
# attitudes and information influence are both qualitative ordinal variables, so Kendall's T is used.

cor.test(respondent.df$attitudes, respondent.df$vote.info, method = c("kendall"))
# p-value = 0.000000000001193
# p-value < 0.05
# tau = 0.3455909, moderate positive agreement
# z = 7.1062


# Race of felon vs. Vignette Response
# --------------------------------

chisq.test(respondent.df$felon.race, respondent.df$v.response)
# p-value = 0.7685
# so, fail to reject the null hypothesis (p > 0.05)
# x-squared = 0.086612 
# df = 1


# Crime Severity vs. Vignette Response
# --------------------------------
chisq.test(respondent.df$crime.sev, respondent.df$v.response)
# p-value = 0.332
# so, fail to reject the null hypothesis (p > 0.05)
# x-squared = 2.205
# df = 2


# Recidivism Intention vs. Vignette Response
# --------------------------------
chisq.test(respondent.df$recidivism, respondent.df$v.response)
# p-value = 0.01084
# so, reject the null hypothesis (p < 0.05), yay!
# x-squared = 6.4907
# df = 1






# https://statsandr.com/blog/pearson-spearman-kendall-correlation-by-hand/
# https://ademos.people.uic.edu/Chapter22.html#23_kendall_correlation

# Pearson: used for two quantitative continuous variables which have a linear relationship

# As stated above, Pearson only works with linear data. That means that your two correlated factors have to approximate a line, and not a curved or parabolic shape. It’s not that you can’t use pearson to see if there is a linear relationship in data, it’s just that there are other tests suited to analyzing those different data structures.
# https://feliperego.github.io/blog/2015/10/23/Interpreting-Model-Output-In-R

# Spearman, used for two quantitative variables if the link is partially linear, or for one qualitative ordinal variable and one quantitative variable. 

# Kendall, often used for two qualitative ordinal variables.
# Strong positive agreement between the ranks when tau > 0.45
# Moderate positive agreement between the ranks when tau > 0.27
# Weak positive agreement between the ranks when tau is > 0.09
# Use negative values and less-than signs for negative correlations.

```


```{r}
# example.aov <- aov(len ~ supp + dose, data = my_data)
# summary(example.aov)
# 
# # or
# example.aov2 <- aov(len ~ supp * dose, data = my_data)
# summary(example.aov2)
```

```{r}
# https://www.r-bloggers.com/2021/08/how-to-plot-categorical-data-in-r-quick-guide/#:~:text=A%20useful%20technique%20to%20show,is%20to%20use%20grouped%20boxplots.&text=The%20teams%20are%20represented%20on,represented%20on%20the%20y%2Daxis

# https://rkabacoff.github.io/datavis/Bivariate.html

# Relationship between Race of Felon and Vignette Respone 
# --------------------------------
table(respondent.df$felon.race, respondent.df$v.response)
# non-white: no = 86, yes = 48
# white: no = 86, yes = 43

# Relationship between Crime Severity and Vignette Respone 
# --------------------------------

table(respondent.df$crime.sev, respondent.df$v.response)
# No:
# low = 58
# medium = 53
# high = 61

# Yes:
# low = 31
# medium = 35
# high = 25

respondent.df %>%
  ggplot(aes(v.response, fill = crime.sev)) +
  geom_bar(position = position_dodge(preserve = "single"), width = 0.7) +
  scale_fill_manual(name = "Crime severity", values = c("lightgreen", "khaki", "indianred")) +
  theme_minimal() +
  labs(x = "Vignette Response", y="Count", title = "Effect of Crime Severity on Voting Rights Restoration")

# The majority of respondents said No to restoring voting rights to the felon.
# Respondents were marginally more likely to restore voting rights to a felon with a medium crime severity than a low or high crime severity **NEED TO CHECK SIGNIFICANCE**


# Relationship between Attitudes and Vignette Response
# --------------------------------
# respondent.df %>%
#   ggplot(aes(v.response, attitudes)) +  
#   geom_boxplot(fill='lightskyblue') +
#   theme_minimal() +
#   labs(x = "Vignette Response", y="Total Attitudes Score", title = "Relationship between Attitudes and Vignette Response")

respondent.df %>%
  group_by(v.response) %>%
  count(attitudes) %>%
  ggplot(aes(attitudes, n, colour = v.response, group = v.response)) +
  geom_line(lwd = 1) +
  theme_minimal() +
  theme(legend.position = 'bottom') +
  scale_colour_hue(labels=c("Voting rights restored", "voting rights NOT restored")) +
  labs(x = "Total Attitudes Score", y = "Count", colour = "Vignette Response", title = "Relationship btw/ attitudes towards felons and decision to restore felon voting rights")


# Attitudes vs. Information Influence
# --------------------------------
# respondent.df$attitudes <- as.factor(respondent.df$attitudes)
# respondent.df$vote.info <- as.factor(respondent.df$vote.info)

respondent.df %>%
  group_by(vote.info) %>%
  count(attitudes) %>% 
  ggplot(aes(attitudes, n, fill = vote.info)) +
  geom_bar(stat = "identity") +
  theme_minimal() +
  scale_y_continuous(labels = scales::percent_format(accurary = 1)) +
  labs(x = "Total attitudes score", y="Proportion (%)", title = "Relationship btw/ attitudes towards felons and voting rights restoration post information", fill = "Voting Rights Decision")


# Relationship between Recidivism Intention and Vignette Response
# --------------------------------
respondent.df %>%
  ggplot(aes(v.response, fill=recidivism)) +
  geom_bar(position="fill", width = 0.7) +
  theme_minimal() +
  scale_y_continuous(labels = scales::percent_format(accurary = 1)) +
  labs(x = "Vignette Response", y="Proportion (%)", title = "Effect of Felon Recidivism Intention on Voting Rights Restoration", fill = "Recidivism Intention")

# plot shows that when shown a vignette of a felon who intends to recommit the crime once released from prison, independent of the severity of the crime committed or the race of the felon, respondents are more likely to not restore rights to the felon compared to respondents who received vignettes of felons who did NOT intend to recidivise. 
















# plot tooth length ("len") by groups ("dose")
# color box plot by a second group: "supp"
# add error bars: mean_se
# 
# # Line plots with multiple groups
# # plot tooth length ("len") by groups ("dose")
# # color box plot by a second group: "supp"
# # add error bars: mean_se
# library(ggpubr)
# ggline(my_data, x = "dose", y = "len", color = "supp",
#        add = c("mean_se", "dotplot"),
#        palette = c("#00AFBB", "#E7B800"))
# 
# # OR
# # using R base graphs:
# boxplot(len ~ supp * dose, data = my_data, frame = FALSE,
#         col = c("#00AFBB", "#E7B800"), ylab = "Tooth Length")
# 
# # Another example: Two-way interaction plot
# interaction.plot(x.factor = my_data$dose, trace.factor = my_data$supp,
#                  # x.factor: the factor to be plotted on x axis
#                  # trace.factor: the factor to be plotted as lines
#                  # response: a numeric variable giving the response
#                  response = my_data$len, fun = mean,
#                  # type: the type of plot (p: point, l: line, b: both point and line)
#                  type = "b", legend = TRUE,
#                  xlab = "Dose", ylab = "Tooth Length",
#                  pch = c(1, 19), col = c("#00AFBB", "#E7B800"))

```


# Interpretation
<!--
Interpretation: Add a short paragraph that interprets the ANOVA test results.
-->
